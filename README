Introduction
------------

The code in this directory provides a primitive program for the
visualization of infinite reductions of length at most omega and is
developed by Jeroen Ketema.

The Haskell code has been tested with versions 6.12.3 and 7.0.3 of the
Glasgow Haskell Compiler (GHC). To obtain GHC, it is best to install the
Haskell Platform:

  http://hackage.haskell.org/platform/

Usage
-----

To experiment with the program try either

  visualization ExampleReduction

or

  visualization ExampleReduction2

Remark that the colors of nodes are chosen randomly depending of the function
symbol of a node. Moreover, the root node of the contracted redex is always
colored red.

New reductions can be defined by implementing a module that exports a function
"c_reduction" of type "DynamicReduction". Note that this currently requires
access to the source code (no package is installed for DynamicReduction).

The program accepts the following keyboard and mouse inputs:

'+'                : zoom in
'-'                : zoom out
right cursor key   : move right
left cursor key    : move left
'r'                : reset the display

left mouse button  : select zoom area
right mouse button : change background color

Compilation
-----------

The program can be compiled with:

  ./Setup.lhs configure
  ./Setup.lhs build

Depending on the installation location of the dependencies --user may have to
be pass to configure.

Optionally the program can be installed:

  ./Setup.lhs install

However, after compilation a copy of the program can also be found in the
source directory.

Dependencies
------------

The program has a number dependencies (where the version numbers are the
versions tested with):

* plugins 1.5.1.4
* bitmap-opengl 0.0.0
* stb-image 0.2
* FTGL 1.333

All dependencies can be obtained through Hackage:

  http://hackage.haskell.org/

Possible Future Extensions
--------------------------

* Zooming by means of the mouse scroll wheel (this would require freeglut)
* Dialog for selecting reductions (this would require a substantial rewrite
  using either GTK+ or wxWidgets)
* Support different (or better) color schemes
* The definition of a DSL to ease the specification of reductions
