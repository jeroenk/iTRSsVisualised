Introduction
------------

The code in this directory provides a primitive program for the
visualization of infinite reductions of length at most omega and is
developed by Jeroen Ketema.

The Haskell code has been tested with versions 6.12.3 and 7.0.3 of the
Glasgow Haskell Compiler (GHC). To obtain GHC, it is best to install the
Haskell Platform:

  http://hackage.haskell.org/platform/

Usage
-----

To experiment with the program try either

  ./visualization ExampleReduction

or

  ./visualization ExampleReduction2

Remark that the colors of nodes are chosen randomly depending of the function
symbol of a node. Moreover, the root node of the contracted redex is always
colored red.

New reductions can be defined by implementing a module that exports a function
"c_reduction" of type "DynamicReduction".

The program accepts the following keyboard and mouse inputs:

'+'                : zoom in
'-'                : zoom out
right cursor key   : move right
left cursor key    : move left
'r'                : reset the display

left mouse button  : select zoom area
right mouse button : change background color

Compilation
-----------

The program can be compiled with

  ghc -i.. --make -Wall visualization.hs -o visualization

If necessary linking against the ftgl library should be done explicitly by
means of the following additional options:

  -L<fgtl prefix>/lib -lftgl

Dependencies
------------

The program has a number external dependencies (where the version numbers
indicate the versions tested with):

* plugins-1.5.1.4
* bitmap-0.0.1
* bitmap-opengl-0.0.0
* stb-image-0.2
* FTGL-1.333 which further depends on ftgl-2.1.3-rc5

All external dependencies, except for ftgl, can be obtained from Hackage:

  http://hackage.haskell.org/

ftgl can be obtained from:

  http://sourceforge.net/projects/ftgl/

Possible Future Extensions
--------------------------

* Zooming by means of the mouse scroll wheel (this would require freeglut)
* Dialog for selecting reductions (this would require a substantial rewrite
  using either GTK+ or wxWidgets)
* Support different (or better) color schemes
* The definition of a DSL to ease the specification of reductions
